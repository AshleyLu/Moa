% This file was created with JabRef 2.3.1.
% Encoding: UTF-8

@ARTICLE{Altschul1990,
  author = {S. F. Altschul and W. Gish and W. Miller and E. W. Myers and D. J.
	Lipman},
  title = {Basic local alignment search tool.},
  journal = {J Mol Biol},
  year = {1990},
  volume = {215},
  pages = {403--410},
  number = {3},
  month = {Oct},
  abstract = {A new approach to rapid sequence comparison, basic local alignment
	search tool (BLAST), directly approximates alignments that optimize
	a measure of local similarity, the maximal segment pair (MSP) score.
	Recent mathematical results on the stochastic properties of MSP scores
	allow an analysis of the performance of this method as well as the
	statistical significance of alignments it generates. The basic algorithm
	is simple and robust; it can be implemented in a number of ways and
	applied in a variety of contexts including straightforward DNA and
	protein sequence database searches, motif searches, gene identification
	searches, and in the analysis of multiple regions of similarity in
	long DNA sequences. In addition to its flexibility and tractability
	to mathematical analysis, BLAST is an order of magnitude faster than
	existing sequence comparison tools of comparable sensitivity.},
  doi = {10.1006/jmbi.1990.9999},
  institution = {National Center for Biotechnology Information, National Library of
	Medicine, National Institutes of Health, Bethesda, MD 20894.},
  keywords = {Algorithms; Amino Acid Sequence; Base Sequence; Databases, Factual;
	Mutation; Sensitivity and Specificity; Sequence Homology, Nucleic
	Acid; Software},
  owner = {Cflmwf},
  pii = {S0022283680799990},
  pmid = {2231712},
  timestamp = {2009.01.29},
  url = {http://dx.doi.org/10.1006/jmbi.1990.9999}
}

@ARTICLE{Blanco2007,
  author = {Enrique Blanco and Genís Parra and Roderic Guigó},
  title = {Using geneid to identify genes.},
  journal = {Curr Protoc Bioinformatics},
  year = {2007},
  volume = {Chapter 4},
  pages = {Unit 4.3},
  month = {Jun},
  abstract = {This unit describes the usage of geneid, an efficient gene-finding
	program that allows for the analysis of large genomic sequences,
	including whole mammalian chromosomes. These sequences can be partially
	annotated, and geneid can be used to refine this initial annotation.
	Training geneid is relatively easy, and parameter configurations
	exist for a number of eukaryotic species. Geneid produces output
	in a variety of standard formats. The results, thus, can be processed
	by a variety of software tools, including visualization programs.
	Geneid software is in the public domain, and it is undergoing constant
	development. It is easy to install and use. Exhaustive benchmark
	evaluations show that geneid compares favorably with other existing
	gene finding tools.},
  doi = {10.1002/0471250953.bi0403s18},
  institution = {Centre de Regulació Genòmica, Institut Municipal d'Investigació Mèdica,
	Universitat Pompeu Fabra, Barcelona, Spain.},
  keywords = {Algorithms; Base Sequence; Chromosome Mapping; Genes; Molecular Sequence
	Data; Sequence Alignment; Sequence Analysis, DNA},
  owner = {mf},
  pmid = {18428791},
  timestamp = {2009.07.27},
  url = {http://dx.doi.org/10.1002/0471250953.bi0403s18}
}

@ARTICLE{Fiers2008,
  author = {Mark W E J Fiers and Ate van der Burgt and Erwin Datema and Joost
	C W de Groot and Roeland C H J van Ham},
  title = {High-throughput bioinformatics with the Cyrille2 pipeline system.},
  journal = {BMC Bioinformatics},
  year = {2008},
  volume = {9},
  pages = {96},
  abstract = {BACKGROUND: Modern omics research involves the application of high-throughput
	technologies that generate vast volumes of data. These data need
	to be pre-processed, analyzed and integrated with existing knowledge
	through the use of diverse sets of software tools, models and databases.
	The analyses are often interdependent and chained together to form
	complex workflows or pipelines. Given the volume of the data used
	and the multitude of computational resources available, specialized
	pipeline software is required to make high-throughput analysis of
	large-scale omics datasets feasible. RESULTS: We have developed a
	generic pipeline system called Cyrille2. The system is modular in
	design and consists of three functionally distinct parts: 1) a web
	based, graphical user interface (GUI) that enables a pipeline operator
	to manage the system; 2) the Scheduler, which forms the functional
	core of the system and which tracks what data enters the system and
	determines what jobs must be scheduled for execution, and; 3) the
	Executor, which searches for scheduled jobs and executes these on
	a compute cluster. CONCLUSION: The Cyrille2 system is an extensible,
	modular system, implementing the stated requirements. Cyrille2 enables
	easy creation and execution of high throughput, flexible bioinformatics
	pipelines.},
  doi = {10.1186/1471-2105-9-96},
  institution = {Applied Bioinformatics, Plant Research International, PO Box 16,
	6700AA Wageningen, The Netherlands. Mark.Fiers@wur.nl},
  keywords = {Algorithms; Computational Biology; Database Management Systems; Databases,
	Genetic; Information Storage and Retrieval; Software; User-Computer
	Interface},
  owner = {mf},
  pii = {1471-2105-9-96},
  pmid = {18269742},
  timestamp = {2009.07.27},
  url = {http://dx.doi.org/10.1186/1471-2105-9-96}
}

@ARTICLE{Kent2002,
  author = {W. James Kent},
  title = {BLAT--the BLAST-like alignment tool.},
  journal = {Genome Res},
  year = {2002},
  volume = {12},
  pages = {656--664},
  number = {4},
  month = {Apr},
  abstract = {Analyzing vertebrate genomes requires rapid mRNA/DNA and cross-species
	protein alignments. A new tool, BLAT, is more accurate and 500 times
	faster than popular existing tools for mRNA/DNA alignments and 50
	times faster for protein alignments at sensitivity settings typically
	used when comparing vertebrate sequences. BLAT's speed stems from
	an index of all nonoverlapping K-mers in the genome. This index fits
	inside the RAM of inexpensive computers, and need only be computed
	once for each genome assembly. BLAT has several major stages. It
	uses the index to find regions in the genome likely to be homologous
	to the query sequence. It performs an alignment between homologous
	regions. It stitches together these aligned regions (often exons)
	into larger alignments (typically genes). Finally, BLAT revisits
	small internal exons possibly missed at the first stage and adjusts
	large gap boundaries that have canonical splice sites where feasible.
	This paper describes how BLAT was optimized. Effects on speed and
	sensitivity are explored for various K-mer sizes, mismatch schemes,
	and number of required index matches. BLAT is compared with other
	alignment programs on various test sets and then used in several
	genome-wide applications. http://genome.ucsc.edu hosts a web-based
	BLAT server for the human genome.},
  doi = {10.1101/gr.229202. Article published online before March 2002},
  institution = {Department of Biology and Center for Molecular Biology of RNA, University
	of California-Santa Cruz, Santa Cruz, CA 95064, USA. kent@biology.ucsc.edu},
  keywords = {Animals; Computational Biology; DNA; Humans; Mice; Protein Biosynthesis;
	Proteins; RNA, Messenger; Sequence Alignment; Software},
  owner = {mf},
  pmid = {11932250},
  timestamp = {2009.07.27},
  url = {http://dx.doi.org/10.1101/gr.229202. Article published online before March 2002}
}

@ARTICLE{Langmead2009,
  author = {Ben Langmead and Cole Trapnell and Mihai Pop and Steven L Salzberg},
  title = {Ultrafast and memory-efficient alignment of short DNA sequences to
	the human genome.},
  journal = {Genome Biol},
  year = {2009},
  volume = {10},
  pages = {R25},
  number = {3},
  abstract = {Bowtie is an ultrafast, memory-efficient alignment program for aligning
	short DNA sequence reads to large genomes. For the human genome,
	Burrows-Wheeler indexing allows Bowtie to align more than 25 million
	reads per CPU hour with a memory footprint of approximately 1.3 gigabytes.
	Bowtie extends previous Burrows-Wheeler techniques with a novel quality-aware
	backtracking algorithm that permits mismatches. Multiple processor
	cores can be used simultaneously to achieve even greater alignment
	speeds. Bowtie is open source (http://bowtie.cbcb.umd.edu).},
  doi = {10.1186/gb-2009-10-3-r25},
  institution = {Center for Bioinformatics and Computational Biology, Institute for
	Advanced Computer Studies, University of Maryland, College Park,
	MD 20742, USA. langmead@cs.umd.edu},
  owner = {mf},
  pii = {gb-2009-10-3-r25},
  pmid = {19261174},
  timestamp = {2009.07.27},
  url = {http://dx.doi.org/10.1186/gb-2009-10-3-r25}
}

@ARTICLE{Oinn2004,
  author = {Oinn, T. and Addis, M. and Ferris, J. and Marvin, D. and Senger,
	M. and Greenwood, M. and Carver, T. and Glover, K. and Pocock, M.
	R. and Wipat, A. and Li, P.},
  title = {Taverna: a tool for the composition and enactment of bioinformatics
	workflows.},
  journal = {Bioinformatics},
  year = {2004},
  volume = {20},
  pages = {3045-54},
  number = {17},
  abstract = {MOTIVATION: In silico experiments in bioinformatics involve the co-ordinated
	use of computational tools and information repositories. A growing
	number of these resources are being made available with programmatic
	access in the form of Web services. Bioinformatics scientists will
	need to orchestrate these Web services in workflows as part of their
	analyses. RESULTS: The Taverna project has developed a tool for the
	composition and enactment of bioinformatics workflows for the life
	sciences community. The tool includes a workbench application which
	provides a graphical user interface for the composition of workflows.
	These workflows are written in a new language called the simple conceptual
	unified flow language (Scufl), where by each step within a workflow
	represents one atomic task. Two examples are used to illustrate the
	ease by which in silico experiments can be represented as Scufl workflows
	using the workbench application.},
  authoraddress = {EMBL European Bioinformatics Institute, Hinxton, Cambridge, CB10 1SD,
	UK.},
  keywords = {Computational Biology/*methods ; Computer Communication Networks ;
	*Computer Graphics ; Database Management Systems ; Information Storage
	and Retrieval/*methods ; *Internet ; *Online Systems ; *Software
	; Software Design ; *User-Computer Interface},
  language = {eng},
  medline-aid = {10.1093/bioinformatics/bth361 [doi] ; bth361 [pii]},
  medline-crdt = {2004/06/18 05:00},
  medline-da = {20041123},
  medline-dcom = {20050201},
  medline-dep = {20040616},
  medline-edat = {2004/06/18 05:00},
  medline-fau = {Oinn, Tom ; Addis, Matthew ; Ferris, Justin ; Marvin, Darren ; Senger,
	Martin ; Greenwood, Mark ; Carver, Tim ; Glover, Kevin ; Pocock,
	Matthew R ; Wipat, Anil ; Li, Peter},
  medline-is = {1367-4803 (Print)},
  medline-jid = {9808944},
  medline-jt = {Bioinformatics (Oxford, England)},
  medline-lr = {20061115},
  medline-mhda = {2005/02/03 09:00},
  medline-own = {NLM},
  medline-phst = {2004/06/16 [aheadofprint]},
  medline-pl = {England},
  medline-pmid = {15201187},
  medline-pst = {ppublish},
  medline-pt = {Journal Article ; Research Support, Non-U.S. Gov't},
  medline-sb = {IM},
  medline-so = {Bioinformatics. 2004 Nov 22;20(17):3045-54. Epub 2004 Jun 16.},
  medline-stat = {MEDLINE},
  url = {http://eutils.ncbi.nlm.nih.gov/entrez/eutils/elink.fcgi?cmd=prlinks&dbfrom=pubmed&retmode=ref&id=15201187}
}

@ARTICLE{Potter2004,
  author = {Simon C Potter and Laura Clarke and Val Curwen and Stephen Keenan
	and Emmanuel Mongin and Stephen M J Searle and Arne Stabenau and
	Roy Storey and Michele Clamp},
  title = {The Ensembl analysis pipeline.},
  journal = {Genome Res},
  year = {2004},
  volume = {14},
  pages = {934--941},
  number = {5},
  month = {May},
  abstract = {The Ensembl pipeline is an extension to the Ensembl system which allows
	automated annotation of genomic sequence. The software comprises
	two parts. First, there is a set of Perl modules ("Runnables" and
	"RunnableDBs") which are 'wrappers' for a variety of commonly used
	analysis tools. These retrieve sequence data from a relational database,
	run the analysis, and write the results back to the database. They
	inherit from a common interface, which simplifies the writing of
	new wrapper modules. On top of this sits a job submission system
	(the "RuleManager") which allows efficient and reliable submission
	of large numbers of jobs to a compute farm. Here we describe the
	fundamental software components of the pipeline, and we also highlight
	some features of the Sanger installation which were necessary to
	enable the pipeline to scale to whole-genome analysis.},
  doi = {10.1101/gr.1859804},
  institution = {The Wellcome Trust Sanger Institute, The Wellcome Trust Genome Campus,
	Hinxton, Cambridge, CB10 1SD, UK.},
  keywords = {Base Sequence; Computational Biology; DNA; Databases, Genetic; Programming
	Languages; Proteins; Software; Software Design},
  owner = {mf},
  pii = {14/5/934},
  pmid = {15123589},
  timestamp = {2009.07.22},
  url = {http://dx.doi.org/10.1101/gr.1859804}
}

@ARTICLE{Stein2002,
  author = {Lincoln D Stein and Christopher Mungall and ShengQiang Shu and Michael
	Caudy and Marco Mangone and Allen Day and Elizabeth Nickerson and
	Jason E Stajich and Todd W Harris and Adrian Arva and Suzanna Lewis},
  title = {The generic genome browser: a building block for a model organism
	system database.},
  journal = {Genome Res},
  year = {2002},
  volume = {12},
  pages = {1599--1610},
  number = {10},
  month = {Oct},
  abstract = {The Generic Model Organism System Database Project (GMOD) seeks to
	develop reusable software components for model organism system databases.
	In this paper we describe the Generic Genome Browser (GBrowse), a
	Web-based application for displaying genomic annotations and other
	features. For the end user, features of the browser include the ability
	to scroll and zoom through arbitrary regions of a genome, to enter
	a region of the genome by searching for a landmark or performing
	a full text search of all features, and the ability to enable and
	disable tracks and change their relative order and appearance. The
	user can upload private annotations to view them in the context of
	the public ones, and publish those annotations to the community.
	For the data provider, features of the browser software include reliance
	on readily available open source components, simple installation,
	flexible configuration, and easy integration with other components
	of a model organism system Web site. GBrowse is freely available
	under an open source license. The software, its documentation, and
	support are available at http://www.gmod.org.},
  doi = {10.1101/gr.403602},
  institution = {Cold Spring Harbor Laboratory, Cold Spring Harbor, New York 11790,
	USA. lstein@cshl.org},
  keywords = {Animals; Computer Graphics; Database Management Systems; Databases,
	Genetic; Diptera; Drosophila Proteins; Drosophila melanogaster; Genome;
	Transcription Factors},
  owner = {mf},
  pmid = {12368253},
  timestamp = {2009.07.27},
  url = {http://dx.doi.org/10.1101/gr.403602}
}

@ARTICLE{Wu2005,
  author = {Thomas D Wu and Colin K Watanabe},
  title = {GMAP: a genomic mapping and alignment program for mRNA and EST sequences.},
  journal = {Bioinformatics},
  year = {2005},
  volume = {21},
  pages = {1859--1875},
  number = {9},
  month = {May},
  abstract = {MOTIVATION: We introduce GMAP, a standalone program for mapping and
	aligning cDNA sequences to a genome. The program maps and aligns
	a single sequence with minimal startup time and memory requirements,
	and provides fast batch processing of large sequence sets. The program
	generates accurate gene structures, even in the presence of substantial
	polymorphisms and sequence errors, without using probabilistic splice
	site models. Methodology underlying the program includes a minimal
	sampling strategy for genomic mapping, oligomer chaining for approximate
	alignment, sandwich DP for splice site detection, and microexon identification
	with statistical significance testing. RESULTS: On a set of human
	messenger RNAs with random mutations at a 1 and 3\% rate, GMAP identified
	all splice sites accurately in over 99.3\% of the sequences, which
	was one-tenth the error rate of existing programs. On a large set
	of human expressed sequence tags, GMAP provided higher-quality alignments
	more often than blat did. On a set of Arabidopsis cDNAs, GMAP performed
	comparably with GeneSeqer. In these experiments, GMAP demonstrated
	a several-fold increase in speed over existing programs. AVAILABILITY:
	Source code for gmap and associated programs is available at http://www.gene.com/share/gmap
	SUPPLEMENTARY INFORMATION: http://www.gene.com/share/gmap.},
  doi = {10.1093/bioinformatics/bti310},
  institution = {Department of Bioinformatics Genentech, Inc., South San Francisco,
	CA 94080, USA. twu@gene.com},
  keywords = {Algorithms; Chromosome Mapping; Expressed Sequence Tags; Genome, Human;
	Humans; RNA Splice Sites; RNA, Messenger; Sequence Alignment; Sequence
	Analysis, DNA; Sequence Analysis, RNA; Sequence Homology, Nucleic
	Acid; Software},
  owner = {mf},
  pii = {bti310},
  pmid = {15728110},
  timestamp = {2009.07.27},
  url = {http://dx.doi.org/10.1093/bioinformatics/bti310}
}

@URL{GFF,
  title = {GFF Format},
  url = {http://song.sourceforge.net/gff3.shtml},
  owner = {mf},
  timestamp = {2009.07.27}
}

@URL{gnumake,
  title = {Gnu Make},
  url = {http://www.gnu.org/software/make/},
  owner = {mf},
  timestamp = {2009.07.22}
}

@comment{jabref-entrytype: Url: req[title;key;url] opt[]}

