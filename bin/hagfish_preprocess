#!/usr/bin/env python
"""
Preprocess a BAM file for use with hagfish
"""

import os
import sys
import subprocess as sp

data = {}

def bamreader(filename):
    with sp.Popen("samtools view -f 2 %s" % filename, shell=True, 
                    stdout=sp.PIPE).stdout as data:
        while True:
            l1 = data.readline()
            l2 = data.readline()
            if not l1 or not l2: break
            ls1 = l1.strip().split()
            ls2 = l2.strip().split()
            sq = ls1[2]
            ps1 = int(ls1[3])
            ps2 = int(ls1[7]) + len(ls1[9])
            size = int(ls1[8])
            yield [sq,  ps1, size, ps2]

def write_data(d):
    print 'writing data!'
    for seq in data.keys():
        with open('%s.cam' % seq, 'a') as F:
            for pos1, size, pos2 in data[seq]:
                F.write("%s\t%s\t%s\n" % (pos1, size, pos2))

i = 0
for inputFile in sys.argv[1:]:
    print "Processing", inputFile
    for seq, pos1, size, pos2 in bamreader(inputFile):
        i += 1
        if not data.has_key(seq): data[seq] = []
        data[seq].append((pos1, size, pos2))
        if i > 10000000:
            write_data(data)
            data = {}
            i = 0
write_data(data)
