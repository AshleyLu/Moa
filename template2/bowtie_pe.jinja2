### run
echo start bowtie pe														
bowtie -S {{ extra_params }}           	    \
    -I {{ min_insertsize }}             	\
    -X {{ max_insertsize }}             	\
    {{ ebwt_base }}                     	\
    -1 {{ fq_forward_input }}           	\
    -2 {{ fq_reverse_input }} | {{ snippets.sam2bam }} - > {{ output }}
echo fin bowtie pe

### clean

rm *.bam

### unittest

export MOA_NOLOGO=1

mkdir 10.bowtiedb
cd 10.bowtiedb 
moa new bowtiedb -t 'demo index referece using bowtie'
[[ -d .moa ]] && echo "Found .moa INDEX directory" || (echo "Cannot find .moa INDEX directory"; false)
moa set input="${MOABASE}/share/test/test.fasta"
moa set ebwt_outfile_base=testDB
moa run
numFiles= ls -l * | grep '^-' | grep testDB | wc -l
[[ ${numFiles} -eq 6 ]] && (echo "Index files created"; true) || (echo "Index files not created"; false)


cd ../

mkdir 20.bowtie_pe
cd 20.bowtie_pe
pwd >&2
moa new bowtie_pe -t 'demo bowtie aligning paired ends'
[[ -d .moa ]] && echo "Found .moa ALN directory" || (echo "Cannot find .moa ALN directory"; false)
moa set ebwt_base=${PWD%/*}/10.bowtiedb/testDB
moa set fq_forward_input=${MOABASE}/share/test/read_1.fq
moa run
[[ -f read.bam ]] && ( [[ ! -s read.bam ]] && echo "read.bam file exists and has size > 0" || echo "read.bam file is empty", false) || (echo "read.bam file does not exist")