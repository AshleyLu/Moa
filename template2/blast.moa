author: Mark Fiers
backend: gnumake
commands: [blast, clean, blast_report]
creation_date: Wed Nov 10 07:56:48 2010
description: Wraps BLAST [[Alt90]], probably the most popular similarity search tool
  in bioinformatics.
gnumake_makefile: /home/mf/project/moa/template2/blast.mk
help: {blast: 'Running BLAST takes an input directory (*blast_input_dir*), determines
    what sequence files are present (with the parameter *blast_input_extension*) and
    executes BLAST on each of these. Moa BLAST is configured to create XML output
    (as opposed to the standard text based output) in the *./out* directory. The output
    XML is subsequently converted to GFF3 by the custom *blast2gff* script (using
    BioPython). Additionally, a simple text report is created.', blast_report: Generate
    a text BLAST report., clean: 'Remove all job data, not the Moa job itself, note
    that this must be implemented by the template.'}
moa_id: blast
modification_date: Wed Nov 10 07:56:48 2010
name: blast
parameter_category_order: ['', input, system, advanced]
parameters:
  blast_gff_blasthit:
    allowed: [T, F]
    cardinality: one
    category: ''
    default: F
    help: (T,**F**) - export an extra blasthit feature to the created gff, grouping
      all hsp (match) features.
    mandatory: false
    type: set
    value: F
  db:
    allowed: []
    category: ''
    default: ''
    help: Location of the blast database. You can either define the blast db parameter
      as used by blast, or any of the blast database files, in which case the extension
      will be removed before use
    mandatory: true
    type: file
  eval:
    allowed: []
    category: ''
    default: 1e-10
    help: e value cutoff
    mandatory: false
    type: float
  gff_source:
    allowed: []
    category: ''
    default: BLAST
    help: source field to use in the gff
    mandatory: false
    type: string
  input_dir:
    allowed: []
    category: input
    default: ''
    help: Directory with the BLAST input files
    mandatory: true
    type: directory
  input_extension:
    allowed: []
    category: input
    default: fasta
    help: file extension for the files in blast_input_dir
    mandatory: false
    type: string
  input_glob:
    allowed: []
    category: input
    default: '*'
    help: glob to select a subset of files from blast_input_dir
    mandatory: false
    type: string
  input_limit:
    allowed: []
    category: input
    default: ''
    help: 'Number of files to use, if not defined: all files'
    mandatory: false
    type: integer
  input_sort:
    allowed: [u, s, sr, t, tr]
    category: input
    default: u
    help: 'Sort order. Choose from: u - unsorted, s - size, sr - size reverse, t -
      time, tr - time reverse'
    mandatory: false
    type: set
  moa_postcommand:
    allowed: []
    category: advanced
    default: ''
    help: A single shell command to be executed after the Moa is finished. For more
      complex processing please override the moa_postprocess target in the local Makefile.
    mandatory: false
    type: string
  moa_precommand:
    allowed: []
    category: advanced
    default: ''
    help: A single command to be executed before the main operation starts. For more
      complicated processing, please override the moa_preprocess target in the local
      Makefile.
    mandatory: false
    type: string
  nohits:
    allowed: []
    category: ''
    default: '50'
    help: number of hits to report
    mandatory: false
    type: integer
  nothreads:
    allowed: []
    category: ''
    default: '2'
    help: threads to run blast with (note the overlap with the Make -j parameter)
    mandatory: false
    type: integer
  program:
    allowed: [blastx, blastn, blastp, tblastn, tblastx]
    category: ''
    default: blastn
    help: 'blast program to use (default: blastn)'
    mandatory: false
    type: set
  title:
    allowed: []
    category: system
    default: ''
    help: A name for this job
    mandatory: true
    type: string
title: Basic Local Alignment Tool
