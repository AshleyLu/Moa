author: Mark Fiers
backend: gnumake
commands: [adhoc, clean]
creation_date: Wed Nov 10 07:56:48 2010
description: The ad hoc template aids in executing a one line on a set of input files.
filesets:
  input: {description: Input files for adhoc, optional: true, type: input}
gnumake_makefile: /tmp/x/adhoc.mk
help: {adhoc: '', clean: 'Remove all job data, not the Moa job itself, note that this
    must be implemented by the template.'}
moa_id: adhoc
modification_date: Wed Nov 10 07:56:48 2010
name: adhoc
parameter_category_order: ['', input, system, advanced]
parameters:
  input_dir:
    allowed: []
    category: input
    default: ''
    help: Input files for adhoc
    mandatory: false
    type: directory
  input_extension:
    allowed: []
    category: input
    default: ''
    help: file extension for the files in adhoc_input_dir
    mandatory: false
    type: string
  input_glob:
    allowed: []
    category: input
    default: '*'
    help: glob to select a subset of files from adhoc_input_dir
    mandatory: false
    type: string
  input_limit:
    allowed: []
    category: input
    default: ''
    help: 'Number of files to use, if not defined: all files'
    mandatory: false
    type: integer
  input_sort:
    allowed: [u, s, sr, t, tr]
    category: input
    default: u
    help: 'Sort order. Choose from: u - unsorted, s - size, sr - size reverse, t -
      time, tr - time reverse'
    mandatory: false
    type: set
  moa_postcommand:
    allowed: []
    category: advanced
    default: ''
    help: A single shell command to be executed after the Moa is finished. For more
      complex processing please override the moa_postprocess target in the local Makefile.
    mandatory: false
    type: string
  moa_precommand:
    allowed: []
    category: advanced
    default: ''
    help: A single command to be executed before the main operation starts. For more
      complicated processing, please override the moa_preprocess target in the local
      Makefile.
    mandatory: false
    type: string
  mode:
    allowed: [seq, par, all, simple]
    category: ''
    default: seq
    help: ' operation mode: *seq*, sequential: process the input files one by one;
      *par*, parallel: process the input files in parallel (use with `-j`); *all*:
      process all input files at once (use `$^` in `adhoc_process`) and *simple*:
      Ignore input files, just execute `adhoc_process` once.'
    mandatory: false
    type: set
  name_sed:
    allowed: []
    category: ''
    default: s/a/a/
    help: A sed expression which can be used to derive the output file name for each
      input file (excluding the path). The sed expression is executed for each input
      file name, and the result is available as $t in the $(adhoc_process) statement.
      Make sure that you use single quotes when specifying this on the command line
    mandatory: false
    type: string
  output_dir:
    allowed: []
    category: ''
    default: .
    help: Output subdirectory
    mandatory: false
    type: directory
  powerclean:
    allowed: [T, F]
    category: ''
    default: F
    help: Do brute force cleaning (T/F). Remove all files, except moa.mk & Makefile
      when calling make clean. Defaults to F.
    mandatory: false
    type: set
  process:
    allowed: []
    category: ''
    default: echo "needs a sensbile command"
    help: Command to execute for each input file. The path to the input file is available
      as $< and the output file as $t. (it is not mandatory to use both parameters,
      for example "cat $< > output" would concatenate all files into one big file
    mandatory: false
    type: string
  r_mode:
    allowed: [T, F]
    category: ''
    default: F
    help: R mode is a dedication mode to run R scripts
    mandatory: false
    type: set
  title:
    allowed: []
    category: system
    default: ''
    help: A name for this job
    mandatory: true
    type: string
  touch:
    allowed: [T, F]
    category: ''
    default: T
    help: use touch files to track if input files have changed.
    mandatory: false
    type: set
title: Execute an ad hoc analysis
