author: Mark Fiers
backend: gnumake
commands: [bowtie, clean]
creation_date: Wed Nov 10 07:56:48 2010
description: Run BOWTIE on an set of input files (query) vs a database index.
filesets:
  input: {description: Input files for bowtie, optional: false, type: input}
gnumake_makefile: /tmp/x/bowtie.mk
help: {bowtie: '', clean: 'Remove all job data, not the Moa job itself, note that
    this must be implemented by the template.'}
moa_id: bowtie
modification_date: Wed Nov 10 07:56:48 2010
name: bowtie
parameter_category_order: ['', input, system, advanced]
parameters:
  basename:
    allowed: []
    category: ''
    default: all
    help: basename for generating the merged, sorted and indexed files
    mandatory: false
    type: string
  db:
    allowed: []
    category: ''
    default: ''
    help: The bowtie database to use. It is allowed to define one of the bowtie database
      files (.[0-9].ebwt).
    mandatory: true
    type: file
  extra_params:
    allowed: []
    category: ''
    default: ''
    help: extra parameters to feed bowtie
    mandatory: false
    type: string
  forward_suffix:
    allowed: []
    category: ''
    default: _1
    help: Last part of the sequence name identifying a file with forward reads
    mandatory: false
    type: string
  input_dir:
    allowed: []
    category: input
    default: ''
    help: Input files for bowtie
    mandatory: true
    type: directory
  input_extension:
    allowed: []
    category: input
    default: fastq
    help: file extension for the files in bowtie_input_dir
    mandatory: false
    type: string
  input_format:
    allowed: [fastq, fasta]
    category: ''
    default: fastq
    help: Format of the input files
    mandatory: false
    type: set
  input_glob:
    allowed: []
    category: input
    default: '*'
    help: glob to select a subset of files from bowtie_input_dir
    mandatory: false
    type: string
  input_limit:
    allowed: []
    category: input
    default: ''
    help: 'Number of files to use, if not defined: all files'
    mandatory: false
    type: integer
  input_sort:
    allowed: [u, s, sr, t, tr]
    category: input
    default: u
    help: 'Sort order. Choose from: u - unsorted, s - size, sr - size reverse, t -
      time, tr - time reverse'
    mandatory: false
    type: set
  insertsize:
    allowed: []
    category: ''
    default: '5000'
    help: Expected insertsize
    mandatory: false
    type: float
  insertsize_max:
    allowed: []
    category: ''
    default: '10'
    help: Max insertsize for a paired alignment
    mandatory: false
    type: float
  insertsize_min:
    allowed: []
    category: ''
    default: '0.1'
    help: multiplier determining the minimal acceptable value for two paired reads
      to be apart. If the bowtie_insertsize is 10000 and this parameter is set at
      0.8, than reads that are closer together than 8000 nt are rejecte
    mandatory: false
    type: float
  insertsize_sed:
    allowed: []
    category: ''
    default: ''
    help: SED expression to filter the expected insertsize from the input file name
    mandatory: false
    type: string
  moa_postcommand:
    allowed: []
    category: advanced
    default: ''
    help: A single shell command to be executed after the Moa is finished. For more
      complex processing please override the moa_postprocess target in the local Makefile.
    mandatory: false
    type: string
  moa_precommand:
    allowed: []
    category: advanced
    default: ''
    help: A single command to be executed before the main operation starts. For more
      complicated processing, please override the moa_preprocess target in the local
      Makefile.
    mandatory: false
    type: string
  msi:
    allowed: [T, F]
    category: ''
    default: F
    help: Merge, sort and index? If *T* use samtools to merge all bamfiles into one,
      sort them and create an index
    mandatory: false
    type: set
  output_format:
    allowed: [bowtie, bam, sam]
    category: ''
    default: bam
    help: Format of the output file
    mandatory: false
    type: set
  paired_ends:
    allowed: [T, F]
    category: ''
    default: F
    help: perform a paired end analysis. If so, the input files are expected to be
      of the form *_1.fastq and  *_2.fastq
    mandatory: false
    type: set
  reverse_suffix:
    allowed: []
    category: ''
    default: _2
    help: Last part of the sequence name identifying a file with reverse reads
    mandatory: false
    type: string
  title:
    allowed: []
    category: system
    default: ''
    help: A name for this job
    mandatory: true
    type: string
title: Bowtie
